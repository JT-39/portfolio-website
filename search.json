[
  {
    "objectID": "jwp_goal_map.html",
    "href": "jwp_goal_map.html",
    "title": "JWP Goals",
    "section": "",
    "text": "Back when Southampton F.C. were in the Premier League, a player named James Ward-Prowse (JWP) was (and still is) a club legend and a very talented football player.\nThe map below shows all his goals, whom he scored against and where he scored them from in that last season he played for the club.\n!(Insert_image)[JWP goal map]\nThe code used to extract and plot the data can be found in the folder “JWP_goals”."
  },
  {
    "objectID": "jwp_goals/Extract_goal_pos_JWP.html",
    "href": "jwp_goals/Extract_goal_pos_JWP.html",
    "title": "JT",
    "section": "",
    "text": "import requests\nfrom bs4 import BeautifulSoup\nimport json\n\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Arc\nfrom matplotlib.patches import Circle, Patch\nimport matplotlib.image as mpimg\n\n\nurl = \"https://one-versus-one.com/en/players/James-Ward-Prowse\"\n\n# Send an HTTP GET request to the URL\nresponse = requests.get(url)\n\n# Parse the HTML content using BeautifulSoup\nsoup = BeautifulSoup(response.content, 'html.parser')\n\n\n# Extract match date\nmatch_date = soup.find('td', class_='table-cell-goals').text.strip()\n\n# Extract teams' information\nteam_elements = soup.find_all('td', class_='table-cell-goals with-image')\nteams = []\nfor team_element in team_elements:\n    team_name = team_element.find('span', class_='team-name').text.strip()\n    team_logo = team_element.find('img')['src']\n    teams.append({'name': team_name, 'logo': team_logo})\n\n# Extract players' information\nplayer_elements = soup.find_all('div', class_='player-goals-run-cont')\ngoal_pos = []\nfor player_element in player_elements:\n    # Subset for relevant data\n    data_string = player_element['data-data']\n    # Parse the JSON data\n    data = json.loads(data_string)\n\n    # Access the values\n    oppo_value = data[0][0]['opponent_team_name']\n    x_value = data[0][0]['x']\n    y_value = data[0][0]['y']\n    goal_pos.append({'opposition':oppo_value, 'x_pos': x_value, 'y_pos': y_value})\n\n# Setting team colours\nteam_colors = {\n    'Liverpool FC': 'Liverpool.png',\n    'Nottingham Forrest': 'everton.png',\n    'Tottenham Hotspur': 'tottenham_hotspur.png',\n    'Chelsea': 'chelsea_fc.png',\n    'Everton FC': 'everton.png',\n    'Fulham': 'Fulham.png',\n    'Brighton and Hove Albion': 'Brighton__Hove_Albion.png'\n}\n\n# Update each item in the 'data' list with 'team_colour' key\nfor i, item in enumerate(goal_pos):\n    team_name = item['opposition']\n    goal_pos[i]['oppo_colour'] = team_colors.get(team_name, 'gray')  # Default to 'gray' if team color not found\n\n\n\nfrom PIL import Image\n\n# Specify the desired width and height for the scaled images\ndesired_width = 100\ndesired_height = 100\n\n# Load and resize the images\nimage_paths = ['Liverpool.png', 'everton.png', 'tottenham_hotspur.png', 'chelsea_fc.png', 'Fulham.png', \n               'Brighton__Hove_Albion.png']  # Replace with the paths to your .png files\nfor image_path in image_paths:\n    image = Image.open(f'Opp_team_logo/{image_path}')\n    resized_image = image.resize((desired_width, desired_height), Image.LANCZOS)  # Use LANCZOS for anti-aliasing\n    resized_image.save(f\"Opp_team_logo/resized_{image_path}\", optimize=True, quality=95)  # Save the resized image with a new name\n\nprint(\"Images resized successfully.\")\n\nImages resized successfully.\n\n\n\ngoal_pos\n\n[{'opposition': 'Liverpool FC',\n  'x_pos': 93.5,\n  'y_pos': 39.9,\n  'oppo_colour': 'Liverpool.png'},\n {'opposition': 'Nottingham Forrest',\n  'x_pos': 94,\n  'y_pos': 34,\n  'oppo_colour': 'everton.png'},\n {'opposition': 'Tottenham Hotspur',\n  'x_pos': 94,\n  'y_pos': 34,\n  'oppo_colour': 'tottenham_hotspur.png'},\n {'opposition': 'Chelsea',\n  'x_pos': 77.5,\n  'y_pos': 42.8,\n  'oppo_colour': 'chelsea_fc.png'},\n {'opposition': 'Everton FC',\n  'x_pos': 97.4,\n  'y_pos': 30.7,\n  'oppo_colour': 'everton.png'},\n {'opposition': 'Everton FC',\n  'x_pos': 97.4,\n  'y_pos': 30.7,\n  'oppo_colour': 'everton.png'},\n {'opposition': 'Fulham',\n  'x_pos': 76.2,\n  'y_pos': 35.1,\n  'oppo_colour': 'Fulham.png'},\n {'opposition': 'Brighton and Hove Albion',\n  'x_pos': 97.8,\n  'y_pos': 33.1,\n  'oppo_colour': 'Brighton__Hove_Albion.png'},\n {'opposition': 'Tottenham Hotspur',\n  'x_pos': 91.2,\n  'y_pos': 33.2,\n  'oppo_colour': 'tottenham_hotspur.png'}]\n\n\n\n# Define pitch dimensions\npitch_length = 130.0\npitch_width = 90.0\n\n#Create figure\nfig=plt.figure()\nfig.set_size_inches(10, 8)\nfig.set_facecolor('#4CAF50')\nax=fig.add_subplot(1,1,1)\n\n#Pitch Outline & Centre Line\nplt.plot([0,0],[0,90], color=\"white\")\nplt.plot([0,130],[90,90], color=\"white\")\nplt.plot([130,130],[90,0], color=\"white\")\nplt.plot([130,0],[0,0], color=\"white\")\nplt.plot([65,65],[0,90], color=\"white\")\n\n#Left Penalty Area\nplt.plot([16.5,16.5],[65,25],color=\"white\")\nplt.plot([0,16.5],[65,65],color=\"white\")\nplt.plot([16.5,0],[25,25],color=\"white\")\n\n#Right Penalty Area\nplt.plot([130,113.5],[65,65],color=\"white\")\nplt.plot([113.5,113.5],[65,25],color=\"white\")\nplt.plot([113.5,130],[25,25],color=\"white\")\n\n#Left 6-yard Box\nplt.plot([0,5.5],[54,54],color=\"white\")\nplt.plot([5.5,5.5],[54,36],color=\"white\")\nplt.plot([5.5,0.5],[36,36],color=\"white\")\n\n#Right 6-yard Box\nplt.plot([130,124.5],[54,54],color=\"white\")\nplt.plot([124.5,124.5],[54,36],color=\"white\")\nplt.plot([124.5,130],[36,36],color=\"white\")\n\n#Prepare Circles\ncentreCircle = plt.Circle((65,45),9.15,color=\"white\",fill=False)\ncentreSpot = plt.Circle((65,45),0.8,color=\"white\")\nleftPenSpot = plt.Circle((11,45),0.8,color=\"white\")\nrightPenSpot = plt.Circle((119,45),0.8,color=\"white\")\n\n#Draw Circles\nax.add_patch(centreCircle)\nax.add_patch(centreSpot)\nax.add_patch(leftPenSpot)\nax.add_patch(rightPenSpot)\n\n#Prepare Arcs\nleftArc = Arc((11,45),height=18.3,width=18.3,angle=0,theta1=310,theta2=50,color=\"white\")\nrightArc = Arc((119,45),height=18.3,width=18.3,angle=0,theta1=130,theta2=230,color=\"white\")\n\n#Draw Arcs\nax.add_patch(leftArc)\nax.add_patch(rightArc)\n\n#Tidy Axes\nplt.axis('off')\n\n# Plot goal-scoring pitch positions\nfor point in goal_pos:\n    x = point['x_pos']*(130/100)\n    y = point['y_pos']*(90/70)\n    team_name = point['opposition']\n    # oppo_colour = point['oppo_colour']\n    badge_path = point['oppo_colour']\n\n    # Load the team badge image\n    img = mpimg.imread(f'Opp_team_logo/resized_{badge_path}')\n\n    # Display the image on the pitch at its respective position\n    image_size = 5  # Adjust the size of the displayed images\n    ax.imshow(img, extent=[x - image_size, x + image_size, y - image_size, y + image_size], alpha=1.0, aspect='auto')\n\n\n\n    # Assuming goal-scoring positions are marked with 'x'\n    # plt.scatter(x, y, marker='.', color=oppo_colour, s=100)\n\n    # Add team name label\n    # plt.text(x, y, team_name, ha='right', va='top', fontsize=8)\n\n# Add legend for team kit colors\n# legend_elements = [Patch(facecolor=color, edgecolor='black', label=team_name)\n#                    for team_name, color in team_colors.items()]\n# ax.legend(handles=legend_elements, loc='center left', bbox_to_anchor=(1, 0.5))\n\n#Display Pitch\nplt.show()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "A little bit about me, I’ve tried to keep it humble with as few sentences as possible starting with “I” …\nI have a strong background in data analysis and enjoy telling stories through data. My goal is to create interactive and engaging data visualizations that help users gain insights to make informed decisions.\nMy professional career started as a Data scientist at NHS Morecambe Bay. I now work at the Department for Education as a Data Sceitnist. I have a BSc in Economics and a MSc in Health Data Science, both of which I studied at the University of Birmingham.\nFeel free to explore my portfolio and get in touch with me if you have any questions or collaboration opportunities. Thank you for visiting!"
  },
  {
    "objectID": "publication.html",
    "href": "publication.html",
    "title": "Long Covid Publication",
    "section": "",
    "text": "The work I completed for my Master’s thesis investigating the primary care cost of Long Coid has been published in the BMC Primary Care."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Portfolio Website for Jake Tufts",
    "section": "",
    "text": "Welcome to my code portfolio website! My name is Jake Tufts, and I am a passionate data scientist with expertise in Python, R, data visualization and (to be) web development/Javascript."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Portfolio Website for Jake Tufts",
    "section": "",
    "text": "Welcome to my code portfolio website! My name is Jake Tufts, and I am a passionate data scientist with expertise in Python, R, data visualization and (to be) web development/Javascript."
  }
]